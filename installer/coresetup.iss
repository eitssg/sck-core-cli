; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "Core Automation"
#ifndef MyAppVersion
#define MyAppVersion "1.5"
#endif
#define MyAppPublisher "Simple"
#define MyAppURL "https://simple-jira.atlassian.net/wiki/display/CORE"
#define MyAppExeName "core.exe"
#ifndef MySourceDir
#define MySourceDir "D:\Development\sck-mod-core\sck-mod-core"
#endif
#define MyIconFile "core.ico"

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{D6EC1B01-976F-45E3-94E6-F386061D2193}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={userpf}\{#MyAppName}
DisableProgramGroupPage=yes
PrivilegesRequired=lowest
OutputDir={#MySourceDir}\installer
OutputBaseFilename=coresetup-{#MyAppVersion}
Compression=lzma
SolidCompression=yes
WizardStyle=modern
SetupIconFile={#MyIconFile}
UninstallDisplayIcon={app}\{#MyAppExeName}

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked

[Files]
Source: "{#MySourceDir}\dist\core\{#MyAppExeName}"; DestDir: "{app}"; Flags: ignoreversion
Source: "{#MySourceDir}\dist\core\_internal\*"; DestDir: "{app}\_internal"; Flags: ignoreversion recursesubdirs createallsubdirs
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Icons]
Name: "{autoprograms}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; IconFilename: "{#MyIconFile}"
Name: "{autodesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; IconFilename: "{#MyIconFile}"; Tasks: desktopicon

[Run]
; Removed to prevent running the program after installation

[Registry]
Root: HKCU; Subkey: "Environment"; ValueType: expandsz; ValueName: "CORE_HOME"; ValueData: "{app}"; Flags: preservestringtype

[Code]
procedure InitializeWizard;
begin
  // Initialization code
end;

procedure CurStepChanged(CurStep: TSetupStep);
var
  OldPath: string;
  NewPath: string;
  ResultCode: Integer;
  AppDir: string;
begin
  if CurStep = ssPostInstall then
  begin
    AppDir := ExpandConstant('{app}');

    if RegQueryStringValue(HKCU, 'Environment', 'PATH', OldPath) then
    begin
      if Pos(AppDir, OldPath) = 0 then
      begin
        NewPath := OldPath + ';' + AppDir;
        Exec(ExpandConstant('{win}\system32\cmd.exe'), '/c setx PATH "' + NewPath + '"', '', SW_HIDE, ewWaitUntilTerminated, ResultCode);
      end;
    end
    else
    begin
      NewPath := AppDir;
      Exec(ExpandConstant('{win}\system32\cmd.exe'), '/c setx PATH "' + NewPath + '"', '', SW_HIDE, ewWaitUntilTerminated, ResultCode);
    end;
  end;
end;
